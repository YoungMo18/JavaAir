{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { getDatabase, ref, get } from \"firebase/database\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// export function LoginForm() {\n//   const [userType, setUserType] = useState(\"\");\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [userButClass, setUserButClass] = useState(\"unclick-login-chooser\");\n//   const [workerButClass, setWorkerButClass] = useState(\"unclick-login-chooser\");\n//   const [showErrorLogin, setShowErrorLogin] = useState(false);\n//   const [isEmpty, setIsEmpty] = useState(false);\n//   const [loginAccount, setLoginAccount] = useState(false);\n//   const navigate = useNavigate();\n//   const handleWorkerChange = () => {\n//     setUserType(\"worker\");\n//     setUserButClass(\"unclick-login-chooser\");\n//     setWorkerButClass(\"click-login-chooser\");\n//   };\n//   const handleUserChange = () => {\n//     setUserType(\"user\");\n//     setUserButClass(\"click-login-chooser\");\n//     setWorkerButClass(\"unclick-login-chooser\");\n//   };\n//   const handleUsernameChange = (event) => {\n//     setUsername(event.target.value);\n//   };\n//   const handlePasswordChange = (event) => {\n//     setPassword(event.target.value);\n//   };\n//   const checkEmpty = () =>\n//     userType === \"\" || username === \"\" || password === \"\";\n//   const checkDBEntries = () => {\n//     const db = getDatabase();\n//     const userRef = ref(db, `user/${username}`);\n//     return get(userRef)\n//       .then((snapshot) => {\n//         if (snapshot.exists()) {\n//           const userValues = snapshot.val();\n//           return (\n//             userValues[\"password\"] === password &&\n//             userValues[\"userType\"] === userType\n//           );\n//         } else {\n//           return false;\n//         }\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//         return false;\n//       });\n//   };\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     let empty = checkEmpty();\n//     if (!empty) {\n//       setIsEmpty(false);\n//       try {\n//         let checkLogin = await checkDBEntries();\n//         if (checkLogin) {\n//           setShowErrorLogin(false);\n//           localStorage.setItem(\"loggedIn\", userType);\n//           localStorage.setItem(\"username\", username);\n//           setLoginAccount(true);\n//           setTimeout(() => {\n//             navigate(\"/intro\");\n//             window.location.reload();\n//           }, 1800);\n//         } else {\n//           setShowErrorLogin(true);\n//         }\n//       } catch (err) {\n//         console.log(err);\n//       }\n//     } else {\n//       console.log(\"empty\");\n//       setIsEmpty(true);\n//     }\n//   };\n//   return (\n//     <div className=\"login-form\">\n//       <article className=\"login-chooser\">\n//         <button onClick={handleWorkerChange} className={workerButClass}>\n//           Worker\n//         </button>\n//         <button onClick={handleUserChange} className={userButClass}>\n//           User\n//         </button>\n//       </article>\n//       <article className=\"login-container\">\n//         <section className=\"login-window\">\n//           <form method=\"post\">\n//             <label for=\"uname\">\n//               <b>Username</b>\n//             </label>\n//             <input\n//               type=\"text\"\n//               name=\"username\"\n//               id=\"uname\"\n//               placeholder=\"Enter your username\"\n//               value={username}\n//               onChange={handleUsernameChange}\n//               required\n//             />\n//             <label for=\"psw\">\n//               <b>Password</b>\n//             </label>\n//             <input\n//               type=\"password\"\n//               name=\"password\"\n//               id=\"psw\"\n//               placeholder=\"Enter your password\"\n//               value={password}\n//               onChange={handlePasswordChange}\n//               required\n//             />\n//             <button id=\"login-btn\" onClick={handleSubmit}>\n//               Login\n//             </button>\n//           </form>\n//           <Link id=\"sign-up-btn\" to=\"/signup\">\n//             Sign Up\n//           </Link>\n//           {isEmpty && <div className=\"error-msg\">Form is incomplete</div>}\n//           {showErrorLogin && (\n//             <div className=\"error-msg\">Incorrect information</div>\n//           )}\n//           {loginAccount && (\n//             <div className=\"success-msg\">\n//               Logged in... Redirecting to home page...\n//             </div>\n//           )}\n//         </section>\n//       </article>\n//     </div>\n//   );\n// }\nimport React,{useState}from\"react\";import{useNavigate,Link}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function LoginForm(){const[userType,setUserType]=useState(\"\");const[username,setUsername]=useState(\"\");const[password,setPassword]=useState(\"\");const[userButClass,setUserButClass]=useState(\"unclick-login-chooser\");const[workerButClass,setWorkerButClass]=useState(\"unclick-login-chooser\");const[showErrorLogin,setShowErrorLogin]=useState(false);const[isEmpty,setIsEmpty]=useState(false);const navigate=useNavigate();const handleWorkerChange=()=>{setUserType(\"worker\");setUserButClass(\"unclick-login-chooser\");setWorkerButClass(\"click-login-chooser\");};const handleUserChange=()=>{setUserType(\"user\");setUserButClass(\"click-login-chooser\");setWorkerButClass(\"unclick-login-chooser\");};const handleUsernameChange=event=>{setUsername(event.target.value);};const handlePasswordChange=event=>{setPassword(event.target.value);};const checkEmpty=()=>userType===\"\"||username===\"\"||password===\"\";const handleSubmit=async event=>{event.preventDefault();if(checkEmpty()){setIsEmpty(true);return;}setIsEmpty(false);try{const response=await fetch(\"/api/v3/users/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username,password,userType})});if(response.ok){setShowErrorLogin(false);navigate(\"/intro\");// Redirect to the home page\n}else{setShowErrorLogin(true);}}catch(err){console.error(\"Login error:\",err);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-form\",children:[/*#__PURE__*/_jsxs(\"article\",{className:\"login-chooser\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleWorkerChange,className:workerButClass,children:\"Worker\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleUserChange,className:userButClass,children:\"User\"})]}),/*#__PURE__*/_jsx(\"article\",{className:\"login-container\",children:/*#__PURE__*/_jsxs(\"section\",{className:\"login-window\",children:[/*#__PURE__*/_jsxs(\"form\",{id:\"login-form\",method:\"post\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"uname\",children:/*#__PURE__*/_jsx(\"b\",{children:\"Username\"})}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"username\",id:\"uname\",placeholder:\"Enter your username\",value:username,onChange:handleUsernameChange,required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"psw\",children:/*#__PURE__*/_jsx(\"b\",{children:\"Password\"})}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",id:\"psw\",placeholder:\"Enter your password\",value:password,onChange:handlePasswordChange,required:true}),/*#__PURE__*/_jsx(\"button\",{id:\"login-btn\",type:\"submit\",children:\"Login\"})]}),/*#__PURE__*/_jsx(Link,{id:\"sign-up-btn\",to:\"/signup\",children:\"Sign Up\"}),isEmpty&&/*#__PURE__*/_jsx(\"div\",{className:\"error-msg\",children:\"Form is incomplete\"}),showErrorLogin&&/*#__PURE__*/_jsx(\"div\",{className:\"error-msg\",children:\"Incorrect information\"})]})})]});}","map":{"version":3,"names":["React","useState","useNavigate","Link","jsx","_jsx","jsxs","_jsxs","LoginForm","userType","setUserType","username","setUsername","password","setPassword","userButClass","setUserButClass","workerButClass","setWorkerButClass","showErrorLogin","setShowErrorLogin","isEmpty","setIsEmpty","navigate","handleWorkerChange","handleUserChange","handleUsernameChange","event","target","value","handlePasswordChange","checkEmpty","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","err","console","error","className","children","onClick","id","onSubmit","htmlFor","type","name","placeholder","onChange","required","to"],"sources":["/Users/muhammadputra/Desktop/JavaAir/frontend/src/components/form/LoginForm.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { getDatabase, ref, get } from \"firebase/database\";\n// import { useNavigate, Link } from \"react-router-dom\";\n\n// export function LoginForm() {\n//   const [userType, setUserType] = useState(\"\");\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [userButClass, setUserButClass] = useState(\"unclick-login-chooser\");\n//   const [workerButClass, setWorkerButClass] = useState(\"unclick-login-chooser\");\n//   const [showErrorLogin, setShowErrorLogin] = useState(false);\n//   const [isEmpty, setIsEmpty] = useState(false);\n//   const [loginAccount, setLoginAccount] = useState(false);\n\n//   const navigate = useNavigate();\n\n//   const handleWorkerChange = () => {\n//     setUserType(\"worker\");\n//     setUserButClass(\"unclick-login-chooser\");\n//     setWorkerButClass(\"click-login-chooser\");\n//   };\n\n//   const handleUserChange = () => {\n//     setUserType(\"user\");\n//     setUserButClass(\"click-login-chooser\");\n//     setWorkerButClass(\"unclick-login-chooser\");\n//   };\n\n//   const handleUsernameChange = (event) => {\n//     setUsername(event.target.value);\n//   };\n\n//   const handlePasswordChange = (event) => {\n//     setPassword(event.target.value);\n//   };\n\n//   const checkEmpty = () =>\n//     userType === \"\" || username === \"\" || password === \"\";\n\n//   const checkDBEntries = () => {\n//     const db = getDatabase();\n//     const userRef = ref(db, `user/${username}`);\n\n//     return get(userRef)\n//       .then((snapshot) => {\n//         if (snapshot.exists()) {\n//           const userValues = snapshot.val();\n//           return (\n//             userValues[\"password\"] === password &&\n//             userValues[\"userType\"] === userType\n//           );\n//         } else {\n//           return false;\n//         }\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//         return false;\n//       });\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     let empty = checkEmpty();\n//     if (!empty) {\n//       setIsEmpty(false);\n\n//       try {\n//         let checkLogin = await checkDBEntries();\n//         if (checkLogin) {\n//           setShowErrorLogin(false);\n//           localStorage.setItem(\"loggedIn\", userType);\n//           localStorage.setItem(\"username\", username);\n//           setLoginAccount(true);\n//           setTimeout(() => {\n//             navigate(\"/intro\");\n//             window.location.reload();\n//           }, 1800);\n//         } else {\n//           setShowErrorLogin(true);\n//         }\n//       } catch (err) {\n//         console.log(err);\n//       }\n//     } else {\n//       console.log(\"empty\");\n//       setIsEmpty(true);\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-form\">\n//       <article className=\"login-chooser\">\n//         <button onClick={handleWorkerChange} className={workerButClass}>\n//           Worker\n//         </button>\n//         <button onClick={handleUserChange} className={userButClass}>\n//           User\n//         </button>\n//       </article>\n//       <article className=\"login-container\">\n//         <section className=\"login-window\">\n//           <form method=\"post\">\n//             <label for=\"uname\">\n//               <b>Username</b>\n//             </label>\n//             <input\n//               type=\"text\"\n//               name=\"username\"\n//               id=\"uname\"\n//               placeholder=\"Enter your username\"\n//               value={username}\n//               onChange={handleUsernameChange}\n//               required\n//             />\n//             <label for=\"psw\">\n//               <b>Password</b>\n//             </label>\n//             <input\n//               type=\"password\"\n//               name=\"password\"\n//               id=\"psw\"\n//               placeholder=\"Enter your password\"\n//               value={password}\n//               onChange={handlePasswordChange}\n//               required\n//             />\n//             <button id=\"login-btn\" onClick={handleSubmit}>\n//               Login\n//             </button>\n//           </form>\n//           <Link id=\"sign-up-btn\" to=\"/signup\">\n//             Sign Up\n//           </Link>\n//           {isEmpty && <div className=\"error-msg\">Form is incomplete</div>}\n//           {showErrorLogin && (\n//             <div className=\"error-msg\">Incorrect information</div>\n//           )}\n//           {loginAccount && (\n//             <div className=\"success-msg\">\n//               Logged in... Redirecting to home page...\n//             </div>\n//           )}\n//         </section>\n//       </article>\n//     </div>\n//   );\n// }\n\n\nimport React, { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\n\nexport function LoginForm() {\n  const [userType, setUserType] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userButClass, setUserButClass] = useState(\"unclick-login-chooser\");\n  const [workerButClass, setWorkerButClass] = useState(\"unclick-login-chooser\");\n  const [showErrorLogin, setShowErrorLogin] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(false);\n  const navigate = useNavigate();\n\n  const handleWorkerChange = () => {\n    setUserType(\"worker\");\n    setUserButClass(\"unclick-login-chooser\");\n    setWorkerButClass(\"click-login-chooser\");\n  };\n\n  const handleUserChange = () => {\n    setUserType(\"user\");\n    setUserButClass(\"click-login-chooser\");\n    setWorkerButClass(\"unclick-login-chooser\");\n  };\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const checkEmpty = () => userType === \"\" || username === \"\" || password === \"\";\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (checkEmpty()) {\n      setIsEmpty(true);\n      return;\n    }\n    setIsEmpty(false);\n\n    try {\n      const response = await fetch(\"/api/v3/users/login\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username, password, userType }),\n      });\n\n      if (response.ok) {\n        setShowErrorLogin(false);\n        navigate(\"/intro\"); // Redirect to the home page\n      } else {\n        setShowErrorLogin(true);\n      }\n    } catch (err) {\n      console.error(\"Login error:\", err);\n    }\n  };\n\n  return (\n    <div className=\"login-form\">\n      <article className=\"login-chooser\">\n        <button onClick={handleWorkerChange} className={workerButClass}>\n          Worker\n        </button>\n        <button onClick={handleUserChange} className={userButClass}>\n          User\n        </button>\n      </article>\n      <article className=\"login-container\">\n        <section className=\"login-window\">\n          <form id=\"login-form\" method=\"post\" onSubmit={handleSubmit}>\n            <label htmlFor=\"uname\">\n              <b>Username</b>\n            </label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              id=\"uname\"\n              placeholder=\"Enter your username\"\n              value={username}\n              onChange={handleUsernameChange}\n              required\n            />\n            <label htmlFor=\"psw\">\n              <b>Password</b>\n            </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"psw\"\n              placeholder=\"Enter your password\"\n              value={password}\n              onChange={handlePasswordChange}\n              required\n            />\n            <button id=\"login-btn\" type=\"submit\">\n              Login\n            </button>\n          </form>\n          <Link id=\"sign-up-btn\" to=\"/signup\">\n            Sign Up\n          </Link>\n          {isEmpty && <div className=\"error-msg\">Form is incomplete</div>}\n          {showErrorLogin && (\n            <div className=\"error-msg\">Incorrect information</div>\n          )}\n        </section>\n      </article>\n    </div>\n  );\n}"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}