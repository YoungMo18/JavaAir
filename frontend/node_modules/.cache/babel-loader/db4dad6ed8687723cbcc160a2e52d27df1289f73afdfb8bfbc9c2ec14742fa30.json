{"ast":null,"code":"var _jsxFileName = \"/Users/muhammadputra/Desktop/JavaAir/frontend/src/components/form/PostFlightForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { getDatabase, ref, get, set as firebaseSet } from \"firebase/database\";\n// import {\n//   getStorage,\n//   ref as storageRef,\n//   uploadBytes,\n//   getDownloadURL,\n// } from \"firebase/storage\";\n\n// export function PostFlightForm() {\n//   const [flightID, setFlightID] = useState(\"\");\n//   const [from, setFrom] = useState(\"\");\n//   const [to, setTo] = useState(\"\");\n//   const [departureTime, setDepartureTime] = useState(\"\");\n//   const [arrivalTime, setArrivalTime] = useState(\"\");\n//   const [departureDate, setDepartureDate] = useState(\"\");\n//   const [quantity, setQuantity] = useState(-1);\n//   const [images, setImages] = useState([]);\n//   const [flightExist, setFlightExist] = useState(false);\n//   const [isEmpty, setIsEmpty] = useState(false);\n//   const [incompatibleFile, setIncompatibleFile] = useState(false);\n//   const [loading, setLoading] = useState(false);\n//   const [successPost, setSuccessPost] = useState(false);\n//   const allowedFileTypes = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\n//   let imageUrls = [];\n\n//   const handleflightIDChange = (event) => {\n//     setFlightID(event.target.value);\n//   };\n\n//   const handleFromChange = (event) => {\n//     setFrom(event.target.value);\n//   };\n\n//   const handleToChange = (event) => {\n//     setTo(event.target.value);\n//   };\n\n//   const handleDepartureTimeChange = (event) => {\n//     setDepartureTime(event.target.value);\n//   };\n\n//   const handleArrivalTimeChange = (event) => {\n//     setArrivalTime(event.target.value);\n//   };\n\n//   const handleQuantityChange = (event) => {\n//     setQuantity(event.target.value);\n//   };\n\n//   const handleDepartureDateChange = (event) => {\n//     setDepartureDate(String(event.target.value));\n//   };\n\n//   const handleImageChange = (event) => {\n//     const selectedFiles = Array.from(event.target.files);\n//     setImages(selectedFiles);\n//   };\n\n//   const checkEmpty = () =>\n//     flightID === \"\" ||\n//     from === \"\" ||\n//     to === \"\" ||\n//     departureTime === \"\" ||\n//     arrivalTime === \"\" ||\n//     departureDate === \"\" ||\n//     images.length === 0 ||\n//     quantity === -1;\n\n//   const checkFile = () => {\n//     return images.every((image) => allowedFileTypes.includes(image.type));\n//   };\n\n//   const checkFlightEntries = () => {\n//     const db = getDatabase();\n//     const flightRef = ref(db, `flight/${flightID}`);\n\n//     return get(flightRef)\n//       .then((snapshot) => {\n//         if (snapshot.exists()) {\n//           setFlightExist(true);\n//           return true;\n//         } else {\n//           setFlightExist(false);\n//           return false;\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//         return false;\n//       });\n//   };\n\n//   const inputDBEntries = () => {\n//     const db = getDatabase();\n//     const flightRef = ref(db, `flight/${flightID}`);\n//     firebaseSet(flightRef, {\n//       flightID: flightID,\n//       from: from,\n//       to: to,\n//       departureTime: departureTime,\n//       arrivalTime: arrivalTime,\n//       quantity: quantity,\n//       departureDate: departureDate,\n//       images: imageUrls,\n//     })\n//       .then(() => console.log(\"data saved successfully!\"))\n//       .catch((err) => console.log(err));\n//     setSuccessPost(true);\n//   };\n\n//   const inputStorageEntries = async () => {\n//     const storage = getStorage();\n\n//     try {\n//       for (const image of images) {\n//         const fileRef = storageRef(storage, `img/${image.name}`);\n//         await uploadBytes(fileRef, image);\n//         const url = await getDownloadURL(fileRef);\n//         imageUrls.push(url);\n//       }\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     let empty = checkEmpty();\n//     if (!empty) {\n//       setIsEmpty(false);\n//       let checkImage = checkFile();\n//       if (checkImage) {\n//         setIncompatibleFile(false);\n//         try {\n//           let checkFlightExist = await checkFlightEntries();\n//           if (!checkFlightExist) {\n//             setLoading(true);\n//             await inputStorageEntries();\n//             await inputDBEntries();\n//             setLoading(false);\n//             setTimeout(() => {\n//               window.location.reload();\n//             }, 1800);\n//           } else {\n//             console.log(\"Flight ID already exists!\");\n//           }\n//         } catch (err) {\n//           console.log(err);\n//         }\n//       } else {\n//         setIncompatibleFile(true);\n//         console.log(\"incompatible file\");\n//       }\n//     } else {\n//       setIsEmpty(true);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <section class=\"post-container\">\n//         <h1>Post Flights</h1>\n//         <form id=\"post-flights-form\">\n//           <label for=\"flight_id\">Flight ID:</label>\n//           <input\n//             type=\"text\"\n//             id=\"flight_id\"\n//             name=\"flight_id\"\n//             onChange={handleflightIDChange}\n//             required\n//           />\n//           <label for=\"from\">From:</label>\n//           <input\n//             type=\"text\"\n//             id=\"from\"\n//             name=\"from\"\n//             onChange={handleFromChange}\n//             required\n//           />\n//           <label for=\"to\">To:</label>\n//           <input\n//             type=\"text\"\n//             id=\"to\"\n//             name=\"to\"\n//             onChange={handleToChange}\n//             required\n//           />\n//           <label for=\"departure_time\">Departure Time:</label>\n//           <input\n//             type=\"text\"\n//             id=\"departure_time\"\n//             name=\"departure_time\"\n//             onChange={handleDepartureTimeChange}\n//             required\n//           />\n//           <label for=\"arrival_time\">Arrival Time:</label>\n//           <input\n//             type=\"text\"\n//             id=\"arrival_time\"\n//             name=\"arrival_time\"\n//             onChange={handleArrivalTimeChange}\n//             required\n//           />\n//           <label for=\"departure_date\">Departure Date:</label>\n//           <input\n//             type=\"date\"\n//             id=\"departure_date\"\n//             name=\"departure_date\"\n//             onChange={handleDepartureDateChange}\n//             required\n//           />\n//           <label for=\"quantity\">Quantity:</label>\n//           <input\n//             type=\"number\"\n//             id=\"quantity\"\n//             name=\"quantity\"\n//             onChange={handleQuantityChange}\n//             required\n//           />\n//           <label for=\"images\">Images:</label>\n//           <div className=\"img-input-container\">\n//             <input\n//               type=\"file\"\n//               id=\"images\"\n//               name=\"images\"\n//               multiple\n//               onChange={handleImageChange}\n//               required\n//             />\n//           </div>\n//           <button type=\"submit\" onClick={handleSubmit}>\n//             Post Flights\n//           </button>\n//         </form>\n//         {isEmpty && <div className=\"error-msg\">Form is incomplete</div>}\n//         {flightExist && (\n//           <div className=\"error-msg\">Flight ID already exists</div>\n//         )}\n//         {incompatibleFile && (\n//           <div className=\"error-msg\">Incompatible file. Input an image</div>\n//         )}\n//         {loading && (\n//           <div>Loading...</div>\n//         )}\n//         {successPost && (\n//           <div className=\"success-msg\">Successfully posted!!!</div>\n//         )}\n//       </section>\n//     </>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PostFlightForm() {\n  _s();\n  const [flightID, setFlightID] = useState(\"\");\n  const [from, setFrom] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n  const [departureTime, setDepartureTime] = useState(\"\");\n  const [arrivalTime, setArrivalTime] = useState(\"\");\n  const [departureDate, setDepartureDate] = useState(\"\");\n  const [quantity, setQuantity] = useState(-1);\n  const [images, setImages] = useState([]);\n  const [flightExist, setFlightExist] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [incompatibleFile, setIncompatibleFile] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [successPost, setSuccessPost] = useState(false);\n  const allowedFileTypes = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\n  const handleInputChange = setter => event => {\n    setter(event.target.value);\n  };\n  const handleImageChange = event => {\n    const selectedFiles = Array.from(event.target.files);\n    setImages(selectedFiles);\n  };\n  const checkEmpty = () => flightID === \"\" || from === \"\" || to === \"\" || departureTime === \"\" || arrivalTime === \"\" || departureDate === \"\" || images.length === 0 || quantity === -1;\n  const checkFile = () => {\n    return images.every(image => allowedFileTypes.includes(image.type));\n  };\n  const uploadImages = async () => {\n    const formData = new FormData();\n    images.forEach(image => formData.append(\"images\", image));\n    try {\n      const response = await fetch(\"/api/v3/flights/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(\"Image upload failed\");\n      }\n      const {\n        imageUrls\n      } = await response.json();\n      return imageUrls;\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  };\n  const submitFlightDetails = async imageUrls => {\n    const flightData = {\n      flightID,\n      from,\n      to,\n      departureTime,\n      arrivalTime,\n      departureDate,\n      quantity,\n      images: imageUrls\n    };\n    try {\n      const response = await fetch(\"/api/v3/flights\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(flightData)\n      });\n      if (!response.ok) {\n        if (response.status === 409) {\n          setFlightExist(true);\n        } else {\n          throw new Error(\"Failed to save flight details\");\n        }\n      } else {\n        setSuccessPost(true);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (checkEmpty()) {\n      setIsEmpty(true);\n      return;\n    }\n    setIsEmpty(false);\n    if (!checkFile()) {\n      setIncompatibleFile(true);\n      return;\n    }\n    setIncompatibleFile(false);\n    try {\n      setLoading(true);\n      const imageUrls = await uploadImages();\n      await submitFlightDetails(imageUrls);\n      setLoading(false);\n      setTimeout(() => {\n        window.location.reload();\n      }, 1800);\n    } catch (err) {\n      setLoading(false);\n      console.error(\"Error submitting flight details:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"post-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Post Flights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"post-flights-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"flight_id\",\n        children: \"Flight ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"flight_id\",\n        name: \"flight_id\",\n        onChange: handleInputChange(setFlightID),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"from\",\n        children: \"From:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"from\",\n        name: \"from\",\n        onChange: handleInputChange(setFrom),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"to\",\n        children: \"To:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"to\",\n        name: \"to\",\n        onChange: handleInputChange(setTo),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"departure_time\",\n        children: \"Departure Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"departure_time\",\n        name: \"departure_time\",\n        onChange: handleInputChange(setDepartureTime),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"arrival_time\",\n        children: \"Arrival Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"arrival_time\",\n        name: \"arrival_time\",\n        onChange: handleInputChange(setArrivalTime),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"departure_date\",\n        children: \"Departure Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"departure_date\",\n        name: \"departure_date\",\n        onChange: handleInputChange(setDepartureDate),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"quantity\",\n        children: \"Quantity:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"quantity\",\n        name: \"quantity\",\n        onChange: handleInputChange(setQuantity),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"images\",\n        children: \"Images:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"images\",\n          name: \"images\",\n          multiple: true,\n          onChange: handleImageChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post Flights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), isEmpty && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-msg\",\n      children: \"Form is incomplete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 19\n    }, this), flightExist && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-msg\",\n      children: \"Flight ID already exists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 23\n    }, this), incompatibleFile && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-msg\",\n      children: \"Incompatible file. Input an image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 19\n    }, this), successPost && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-msg\",\n      children: \"Successfully posted!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 383,\n    columnNumber: 5\n  }, this);\n}\n_s(PostFlightForm, \"HRDIwEdDj8JymCJQni/IRxt09VQ=\");\n_c = PostFlightForm;\nvar _c;\n$RefreshReg$(_c, \"PostFlightForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PostFlightForm","_s","flightID","setFlightID","from","setFrom","to","setTo","departureTime","setDepartureTime","arrivalTime","setArrivalTime","departureDate","setDepartureDate","quantity","setQuantity","images","setImages","flightExist","setFlightExist","isEmpty","setIsEmpty","incompatibleFile","setIncompatibleFile","loading","setLoading","successPost","setSuccessPost","allowedFileTypes","handleInputChange","setter","event","target","value","handleImageChange","selectedFiles","Array","files","checkEmpty","length","checkFile","every","image","includes","type","uploadImages","formData","FormData","forEach","append","response","fetch","method","body","ok","Error","imageUrls","json","err","console","error","submitFlightDetails","flightData","headers","JSON","stringify","status","handleSubmit","preventDefault","setTimeout","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onSubmit","htmlFor","name","onChange","required","multiple","_c","$RefreshReg$"],"sources":["/Users/muhammadputra/Desktop/JavaAir/frontend/src/components/form/PostFlightForm.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { getDatabase, ref, get, set as firebaseSet } from \"firebase/database\";\n// import {\n//   getStorage,\n//   ref as storageRef,\n//   uploadBytes,\n//   getDownloadURL,\n// } from \"firebase/storage\";\n\n// export function PostFlightForm() {\n//   const [flightID, setFlightID] = useState(\"\");\n//   const [from, setFrom] = useState(\"\");\n//   const [to, setTo] = useState(\"\");\n//   const [departureTime, setDepartureTime] = useState(\"\");\n//   const [arrivalTime, setArrivalTime] = useState(\"\");\n//   const [departureDate, setDepartureDate] = useState(\"\");\n//   const [quantity, setQuantity] = useState(-1);\n//   const [images, setImages] = useState([]);\n//   const [flightExist, setFlightExist] = useState(false);\n//   const [isEmpty, setIsEmpty] = useState(false);\n//   const [incompatibleFile, setIncompatibleFile] = useState(false);\n//   const [loading, setLoading] = useState(false);\n//   const [successPost, setSuccessPost] = useState(false);\n//   const allowedFileTypes = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\n//   let imageUrls = [];\n\n//   const handleflightIDChange = (event) => {\n//     setFlightID(event.target.value);\n//   };\n\n//   const handleFromChange = (event) => {\n//     setFrom(event.target.value);\n//   };\n\n//   const handleToChange = (event) => {\n//     setTo(event.target.value);\n//   };\n\n//   const handleDepartureTimeChange = (event) => {\n//     setDepartureTime(event.target.value);\n//   };\n\n//   const handleArrivalTimeChange = (event) => {\n//     setArrivalTime(event.target.value);\n//   };\n\n//   const handleQuantityChange = (event) => {\n//     setQuantity(event.target.value);\n//   };\n\n//   const handleDepartureDateChange = (event) => {\n//     setDepartureDate(String(event.target.value));\n//   };\n\n//   const handleImageChange = (event) => {\n//     const selectedFiles = Array.from(event.target.files);\n//     setImages(selectedFiles);\n//   };\n\n//   const checkEmpty = () =>\n//     flightID === \"\" ||\n//     from === \"\" ||\n//     to === \"\" ||\n//     departureTime === \"\" ||\n//     arrivalTime === \"\" ||\n//     departureDate === \"\" ||\n//     images.length === 0 ||\n//     quantity === -1;\n\n//   const checkFile = () => {\n//     return images.every((image) => allowedFileTypes.includes(image.type));\n//   };\n\n//   const checkFlightEntries = () => {\n//     const db = getDatabase();\n//     const flightRef = ref(db, `flight/${flightID}`);\n\n//     return get(flightRef)\n//       .then((snapshot) => {\n//         if (snapshot.exists()) {\n//           setFlightExist(true);\n//           return true;\n//         } else {\n//           setFlightExist(false);\n//           return false;\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//         return false;\n//       });\n//   };\n\n//   const inputDBEntries = () => {\n//     const db = getDatabase();\n//     const flightRef = ref(db, `flight/${flightID}`);\n//     firebaseSet(flightRef, {\n//       flightID: flightID,\n//       from: from,\n//       to: to,\n//       departureTime: departureTime,\n//       arrivalTime: arrivalTime,\n//       quantity: quantity,\n//       departureDate: departureDate,\n//       images: imageUrls,\n//     })\n//       .then(() => console.log(\"data saved successfully!\"))\n//       .catch((err) => console.log(err));\n//     setSuccessPost(true);\n//   };\n\n//   const inputStorageEntries = async () => {\n//     const storage = getStorage();\n\n//     try {\n//       for (const image of images) {\n//         const fileRef = storageRef(storage, `img/${image.name}`);\n//         await uploadBytes(fileRef, image);\n//         const url = await getDownloadURL(fileRef);\n//         imageUrls.push(url);\n//       }\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     let empty = checkEmpty();\n//     if (!empty) {\n//       setIsEmpty(false);\n//       let checkImage = checkFile();\n//       if (checkImage) {\n//         setIncompatibleFile(false);\n//         try {\n//           let checkFlightExist = await checkFlightEntries();\n//           if (!checkFlightExist) {\n//             setLoading(true);\n//             await inputStorageEntries();\n//             await inputDBEntries();\n//             setLoading(false);\n//             setTimeout(() => {\n//               window.location.reload();\n//             }, 1800);\n//           } else {\n//             console.log(\"Flight ID already exists!\");\n//           }\n//         } catch (err) {\n//           console.log(err);\n//         }\n//       } else {\n//         setIncompatibleFile(true);\n//         console.log(\"incompatible file\");\n//       }\n//     } else {\n//       setIsEmpty(true);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <section class=\"post-container\">\n//         <h1>Post Flights</h1>\n//         <form id=\"post-flights-form\">\n//           <label for=\"flight_id\">Flight ID:</label>\n//           <input\n//             type=\"text\"\n//             id=\"flight_id\"\n//             name=\"flight_id\"\n//             onChange={handleflightIDChange}\n//             required\n//           />\n//           <label for=\"from\">From:</label>\n//           <input\n//             type=\"text\"\n//             id=\"from\"\n//             name=\"from\"\n//             onChange={handleFromChange}\n//             required\n//           />\n//           <label for=\"to\">To:</label>\n//           <input\n//             type=\"text\"\n//             id=\"to\"\n//             name=\"to\"\n//             onChange={handleToChange}\n//             required\n//           />\n//           <label for=\"departure_time\">Departure Time:</label>\n//           <input\n//             type=\"text\"\n//             id=\"departure_time\"\n//             name=\"departure_time\"\n//             onChange={handleDepartureTimeChange}\n//             required\n//           />\n//           <label for=\"arrival_time\">Arrival Time:</label>\n//           <input\n//             type=\"text\"\n//             id=\"arrival_time\"\n//             name=\"arrival_time\"\n//             onChange={handleArrivalTimeChange}\n//             required\n//           />\n//           <label for=\"departure_date\">Departure Date:</label>\n//           <input\n//             type=\"date\"\n//             id=\"departure_date\"\n//             name=\"departure_date\"\n//             onChange={handleDepartureDateChange}\n//             required\n//           />\n//           <label for=\"quantity\">Quantity:</label>\n//           <input\n//             type=\"number\"\n//             id=\"quantity\"\n//             name=\"quantity\"\n//             onChange={handleQuantityChange}\n//             required\n//           />\n//           <label for=\"images\">Images:</label>\n//           <div className=\"img-input-container\">\n//             <input\n//               type=\"file\"\n//               id=\"images\"\n//               name=\"images\"\n//               multiple\n//               onChange={handleImageChange}\n//               required\n//             />\n//           </div>\n//           <button type=\"submit\" onClick={handleSubmit}>\n//             Post Flights\n//           </button>\n//         </form>\n//         {isEmpty && <div className=\"error-msg\">Form is incomplete</div>}\n//         {flightExist && (\n//           <div className=\"error-msg\">Flight ID already exists</div>\n//         )}\n//         {incompatibleFile && (\n//           <div className=\"error-msg\">Incompatible file. Input an image</div>\n//         )}\n//         {loading && (\n//           <div>Loading...</div>\n//         )}\n//         {successPost && (\n//           <div className=\"success-msg\">Successfully posted!!!</div>\n//         )}\n//       </section>\n//     </>\n//   );\n// }\n\n\nimport React, { useState } from \"react\";\n\nexport function PostFlightForm() {\n  const [flightID, setFlightID] = useState(\"\");\n  const [from, setFrom] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n  const [departureTime, setDepartureTime] = useState(\"\");\n  const [arrivalTime, setArrivalTime] = useState(\"\");\n  const [departureDate, setDepartureDate] = useState(\"\");\n  const [quantity, setQuantity] = useState(-1);\n  const [images, setImages] = useState([]);\n  const [flightExist, setFlightExist] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [incompatibleFile, setIncompatibleFile] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [successPost, setSuccessPost] = useState(false);\n  const allowedFileTypes = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\n\n  const handleInputChange = (setter) => (event) => {\n    setter(event.target.value);\n  };\n\n  const handleImageChange = (event) => {\n    const selectedFiles = Array.from(event.target.files);\n    setImages(selectedFiles);\n  };\n\n  const checkEmpty = () =>\n    flightID === \"\" ||\n    from === \"\" ||\n    to === \"\" ||\n    departureTime === \"\" ||\n    arrivalTime === \"\" ||\n    departureDate === \"\" ||\n    images.length === 0 ||\n    quantity === -1;\n\n  const checkFile = () => {\n    return images.every((image) => allowedFileTypes.includes(image.type));\n  };\n\n  const uploadImages = async () => {\n    const formData = new FormData();\n    images.forEach((image) => formData.append(\"images\", image));\n\n    try {\n      const response = await fetch(\"/api/v3/flights/upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Image upload failed\");\n      }\n\n      const { imageUrls } = await response.json();\n      return imageUrls;\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  };\n\n  const submitFlightDetails = async (imageUrls) => {\n    const flightData = {\n      flightID,\n      from,\n      to,\n      departureTime,\n      arrivalTime,\n      departureDate,\n      quantity,\n      images: imageUrls,\n    };\n\n    try {\n      const response = await fetch(\"/api/v3/flights\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(flightData),\n      });\n\n      if (!response.ok) {\n        if (response.status === 409) {\n          setFlightExist(true);\n        } else {\n          throw new Error(\"Failed to save flight details\");\n        }\n      } else {\n        setSuccessPost(true);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (checkEmpty()) {\n      setIsEmpty(true);\n      return;\n    }\n    setIsEmpty(false);\n\n    if (!checkFile()) {\n      setIncompatibleFile(true);\n      return;\n    }\n    setIncompatibleFile(false);\n\n    try {\n      setLoading(true);\n\n      const imageUrls = await uploadImages();\n      await submitFlightDetails(imageUrls);\n\n      setLoading(false);\n      setTimeout(() => {\n        window.location.reload();\n      }, 1800);\n    } catch (err) {\n      setLoading(false);\n      console.error(\"Error submitting flight details:\", err);\n    }\n  };\n\n  return (\n    <section className=\"post-container\">\n      <h1>Post Flights</h1>\n      <form id=\"post-flights-form\" onSubmit={handleSubmit}>\n        <label htmlFor=\"flight_id\">Flight ID:</label>\n        <input\n          type=\"text\"\n          id=\"flight_id\"\n          name=\"flight_id\"\n          onChange={handleInputChange(setFlightID)}\n          required\n        />\n        <label htmlFor=\"from\">From:</label>\n        <input\n          type=\"text\"\n          id=\"from\"\n          name=\"from\"\n          onChange={handleInputChange(setFrom)}\n          required\n        />\n        <label htmlFor=\"to\">To:</label>\n        <input\n          type=\"text\"\n          id=\"to\"\n          name=\"to\"\n          onChange={handleInputChange(setTo)}\n          required\n        />\n        <label htmlFor=\"departure_time\">Departure Time:</label>\n        <input\n          type=\"text\"\n          id=\"departure_time\"\n          name=\"departure_time\"\n          onChange={handleInputChange(setDepartureTime)}\n          required\n        />\n        <label htmlFor=\"arrival_time\">Arrival Time:</label>\n        <input\n          type=\"text\"\n          id=\"arrival_time\"\n          name=\"arrival_time\"\n          onChange={handleInputChange(setArrivalTime)}\n          required\n        />\n        <label htmlFor=\"departure_date\">Departure Date:</label>\n        <input\n          type=\"date\"\n          id=\"departure_date\"\n          name=\"departure_date\"\n          onChange={handleInputChange(setDepartureDate)}\n          required\n        />\n        <label htmlFor=\"quantity\">Quantity:</label>\n        <input\n          type=\"number\"\n          id=\"quantity\"\n          name=\"quantity\"\n          onChange={handleInputChange(setQuantity)}\n          required\n        />\n        <label htmlFor=\"images\">Images:</label>\n        <div className=\"img-input-container\">\n          <input\n            type=\"file\"\n            id=\"images\"\n            name=\"images\"\n            multiple\n            onChange={handleImageChange}\n            required\n          />\n        </div>\n        <button type=\"submit\">Post Flights</button>\n      </form>\n      {isEmpty && <div className=\"error-msg\">Form is incomplete</div>}\n      {flightExist && <div className=\"error-msg\">Flight ID already exists</div>}\n      {incompatibleFile && (\n        <div className=\"error-msg\">Incompatible file. Input an image</div>\n      )}\n      {loading && <div>Loading...</div>}\n      {successPost && <div className=\"success-msg\">Successfully posted!!!</div>}\n    </section>\n  );\n}"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}