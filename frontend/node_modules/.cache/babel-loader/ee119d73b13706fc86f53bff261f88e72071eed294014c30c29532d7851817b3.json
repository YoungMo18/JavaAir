{"ast":null,"code":"var _jsxFileName = \"/Users/muhammadputra/Desktop/INFO340/project-youngmo18-2/src/components/form/SignUpForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { getDatabase, ref, get, set as firebaseSet } from \"firebase/database\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SignUpForm() {\n  _s();\n  const [userType, setUserType] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userButClass, setUserButClass] = useState(\"unclick-login-chooser\");\n  const [workerButClass, setWorkerButClass] = useState(\"unclick-login-chooser\");\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [userExist, setUserExist] = useState(false);\n  const [createdAccount, setCreatedAccount] = useState(false);\n  const navigate = useNavigate();\n  const handleWorkerChange = () => {\n    setUserType(\"worker\");\n    setUserButClass(\"unclick-login-chooser\");\n    setWorkerButClass(\"click-login-chooser\");\n  };\n  const handleUserChange = () => {\n    setUserType(\"user\");\n    setUserButClass(\"click-login-chooser\");\n    setWorkerButClass(\"unclick-login-chooser\");\n  };\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n  const checkEmpty = () => userType === \"\" || username === \"\" || password === \"\";\n  const checkDBEntries = () => {\n    const db = getDatabase();\n    const userRef = ref(db, `user/${username}`);\n    return get(userRef).then(snapshot => {\n      if (snapshot.exists()) {\n        setUserExist(true);\n        return true;\n      } else {\n        setUserExist(false);\n        return false;\n      }\n    }).catch(error => {\n      console.log(error);\n      return false;\n    });\n  };\n  const inputDBEntries = () => {\n    const db = getDatabase();\n    const userRef = ref(db, `user/${username}`);\n    firebaseSet(userRef, {\n      userType: userType,\n      password: password\n    }).then(() => console.log(\"data saved successfully!\")).catch(err => console.log(err));\n    setCreatedAccount(true);\n  };\n  let handleSubmit = async event => {\n    event.preventDefault();\n    let empty = checkEmpty();\n    if (!empty) {\n      setIsEmpty(false);\n      try {\n        let userExist = await checkDBEntries();\n        if (!userExist) {\n          await inputDBEntries();\n          setTimeout(() => {\n            navigate(\"/login\");\n          }, 1800);\n        } else {\n          console.log(\"User already exists!\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      console.log(\"empty\");\n      setIsEmpty(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"signup-chooser\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleWorkerChange,\n        className: workerButClass,\n        children: \"Worker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUserChange,\n        className: userButClass,\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      class: \"signup-container\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"signup-window\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"signup-form\",\n          method: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"uname\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            id: \"unameSign\",\n            placeholder: \"Enter your username\",\n            onChange: handleUsernameChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"psw\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            id: \"pswSign\",\n            placeholder: \"Enter your password\",\n            onChange: handlePasswordChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"signup-btn\",\n            onClick: handleSubmit,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), isEmpty && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-msg\",\n          children: \"Form is incomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 23\n        }, this), userExist && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-msg\",\n          children: \"User already exist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this), createdAccount && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-msg\",\n          children: \"Success!!! Redirecting to login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUpForm, \"UCILeefN8Y2gvjUjSl/XsYV8Fw8=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUpForm;\nvar _c;\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["React","useState","getDatabase","ref","get","set","firebaseSet","useNavigate","jsxDEV","_jsxDEV","SignUpForm","_s","userType","setUserType","username","setUsername","password","setPassword","userButClass","setUserButClass","workerButClass","setWorkerButClass","isEmpty","setIsEmpty","userExist","setUserExist","createdAccount","setCreatedAccount","navigate","handleWorkerChange","handleUserChange","handleUsernameChange","event","target","value","handlePasswordChange","checkEmpty","checkDBEntries","db","userRef","then","snapshot","exists","catch","error","console","log","inputDBEntries","err","handleSubmit","preventDefault","empty","setTimeout","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","class","id","method","for","type","name","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["/Users/muhammadputra/Desktop/INFO340/project-youngmo18-2/src/components/form/SignUpForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { getDatabase, ref, get, set as firebaseSet } from \"firebase/database\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport function SignUpForm() {\n  const [userType, setUserType] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userButClass, setUserButClass] = useState(\"unclick-login-chooser\");\n  const [workerButClass, setWorkerButClass] = useState(\"unclick-login-chooser\");\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [userExist, setUserExist] = useState(false);\n  const [createdAccount, setCreatedAccount] = useState(false);\n  const navigate = useNavigate();\n\n  const handleWorkerChange = () => {\n    setUserType(\"worker\");\n    setUserButClass(\"unclick-login-chooser\");\n    setWorkerButClass(\"click-login-chooser\");\n  };\n\n  const handleUserChange = () => {\n    setUserType(\"user\");\n    setUserButClass(\"click-login-chooser\");\n    setWorkerButClass(\"unclick-login-chooser\");\n  };\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const checkEmpty = () =>\n    userType === \"\" || username === \"\" || password === \"\";\n\n  const checkDBEntries = () => {\n    const db = getDatabase();\n    const userRef = ref(db, `user/${username}`);\n\n    return get(userRef)\n      .then((snapshot) => {\n        if (snapshot.exists()) {\n          setUserExist(true);\n          return true;\n        } else {\n          setUserExist(false);\n          return false;\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        return false;\n      });\n  };\n\n  const inputDBEntries = () => {\n    const db = getDatabase();\n    const userRef = ref(db, `user/${username}`);\n    firebaseSet(userRef, {\n      userType: userType,\n      password: password,\n    })\n      .then(() => console.log(\"data saved successfully!\"))\n      .catch((err) => console.log(err));\n    setCreatedAccount(true);\n  };\n\n  let handleSubmit = async (event) => {\n    event.preventDefault();\n    let empty = checkEmpty();\n    if (!empty) {\n      setIsEmpty(false);\n      try {\n        let userExist = await checkDBEntries();\n        if (!userExist) {\n          await inputDBEntries();\n          setTimeout(() => {\n            navigate(\"/login\");\n          }, 1800);\n        } else {\n          console.log(\"User already exists!\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      console.log(\"empty\");\n      setIsEmpty(true);\n    }\n  };\n\n  return (\n    <div className=\"signup-form\">\n      <article className=\"signup-chooser\">\n        <button onClick={handleWorkerChange} className={workerButClass}>\n          Worker\n        </button>\n        <button onClick={handleUserChange} className={userButClass}>\n          User\n        </button>\n      </article>\n      <article class=\"signup-container\">\n        <section className=\"signup-window\">\n          <form id=\"signup-form\" method=\"post\">\n            <label for=\"uname\">\n              <b>Username</b>\n            </label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              id=\"unameSign\"\n              placeholder=\"Enter your username\"\n              onChange={handleUsernameChange}\n              required\n            />\n            <label for=\"psw\">\n              <b>Password</b>\n            </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"pswSign\"\n              placeholder=\"Enter your password\"\n              onChange={handlePasswordChange}\n              required\n            />\n            <button id=\"signup-btn\" onClick={handleSubmit}>\n              Sign Up\n            </button>\n          </form>\n          {isEmpty && <div className=\"error-msg\">Form is incomplete</div>}\n          {userExist && <div className=\"error-msg\">User already exist</div>}\n          {createdAccount && (\n            <div className=\"success-msg\">Success!!! Redirecting to login</div>\n          )}\n        </section>\n      </article>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}