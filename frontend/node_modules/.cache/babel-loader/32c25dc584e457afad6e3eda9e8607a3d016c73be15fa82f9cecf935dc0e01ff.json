{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { Hamburger } from \"./Hamburger\";\n// import { Link, NavLink, useNavigate } from \"react-router-dom\";\n// export function Navigation(props) {\n//   const [hamburgerOpen, setHamburgerOpen] = useState(false);\n//   const [navClass, setNavClass] = useState(\"nav\");\n//   const [navClassContainer, setNavClassContainer] = useState(\"menu\");\n//   const [history, setHistory] = useState(\"hidden\");\n//   const [post, setPost] = useState(\"hidden\");\n//   const [book, setBook] = useState(\"hidden\");\n//   const [login, setLogin] = useState(\"show\");\n//   const [logout, setLogout] = useState(\"hidden\");\n//   const navigate = useNavigate();\n//   const toggleHamburger = () => {\n//     setHamburgerOpen(!hamburgerOpen);\n//     if (hamburgerOpen) {\n//       setNavClass(\"nav-open\");\n//       setNavClassContainer(\"menu open\");\n//     } else {\n//       setNavClass(\"nav\");\n//       setNavClassContainer(\"menu\");\n//     }\n//   };\n//   const handleLogoutChange = () => {\n//     localStorage.removeItem(\"loggedIn\");\n//     localStorage.removeItem(\"username\");\n//     navigate(\"/login\");\n//     window.location.reload();\n//   };\n//   useEffect(() => {\n//     let loggedIn = localStorage.getItem(\"loggedIn\");\n//     if (loggedIn === \"user\") {\n//       setHistory(\"show\");\n//       setPost(\"hidden\");\n//       setBook(\"show\");\n//       setLogin(\"hidden\");\n//       setLogout(\"show\");\n//     } else if (loggedIn === \"worker\") {\n//       setHistory(\"hidden\");\n//       setPost(\"show\");\n//       setBook(\"hidden\");\n//       setLogin(\"hidden\");\n//       setLogout(\"show\");\n//     } else {\n//       setHistory(\"hidden\");\n//       setPost(\"hidden\");\n//       setBook(\"hidden\");\n//       setLogin(\"show\");\n//       setLogout(\"hidden\");\n//     }\n//   }, []);\n//   return (\n//     <>\n//       <nav>\n//         <h1 className=\"title\">\n//           <Link to=\"/book\">JavaAir</Link>\n//         </h1>\n//         <div className={navClassContainer}>\n//           <div className=\"hamburger\" onClick={toggleHamburger}>\n//             <Hamburger />\n//           </div>\n//           <div className={navClass}>\n//             <ul>\n//               <li>\n//                 <NavLink to=\"/intro\">Home</NavLink>\n//               </li>\n//               <li className={book}>\n//                 <NavLink to=\"/book\">Book</NavLink>\n//               </li>\n//               <li className={history}>\n//                 <NavLink to=\"/history\">History</NavLink>\n//               </li>\n//               <li className={post}>\n//                 <NavLink to=\"/post\">Post</NavLink>\n//               </li>\n//               <li className={login}>\n//                 <NavLink to=\"/login\">Login</NavLink>\n//               </li>\n//               <li className={logout}>\n//                 <button className=\"logout\" onClick={handleLogoutChange}>\n//                   Logout\n//                 </button>\n//               </li>\n//             </ul>\n//           </div>\n//         </div>\n//       </nav>\n//     </>\n//   );\n// }\nimport React,{useState,useEffect}from\"react\";import{Link,NavLink,useNavigate}from\"react-router-dom\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";export function Navigation(){const[userType,setUserType]=useState(\"\");const navigate=useNavigate();useEffect(()=>{const checkSession=async()=>{try{const response=await fetch(\"/api/v3/users/myIdentity\");const data=await response.json();if(data.status===\"loggedin\"){setUserType(data.userInfo.userType);}}catch(err){console.error(\"Error fetching user session:\",err);}};checkSession();},[]);const handleLogout=async()=>{try{await fetch(\"/api/v3/users/logout\",{method:\"POST\"});setUserType(\"\");navigate(\"/login\");}catch(err){console.error(\"Error during logout:\",err);}};return/*#__PURE__*/_jsxs(\"nav\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:/*#__PURE__*/_jsx(Link,{to:\"/book\",children:\"JavaAir\"})}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(NavLink,{to:\"/intro\",children:\"Home\"})}),userType===\"user\"&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(NavLink,{to:\"/history\",children:\"History\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(NavLink,{to:\"/book\",children:\"Book\"})})]}),userType===\"worker\"&&/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(NavLink,{to:\"/post\",children:\"Post\"})}),!userType?/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(NavLink,{to:\"/login\",children:\"Login\"})}):/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"logout\",onClick:handleLogout,children:\"Logout\"})})]})]});}","map":{"version":3,"names":["React","useState","useEffect","Link","NavLink","useNavigate","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Navigation","userType","setUserType","navigate","checkSession","response","fetch","data","json","status","userInfo","err","console","error","handleLogout","method","children","className","to","onClick"],"sources":["/Users/muhammadputra/Desktop/JavaAir/frontend/src/components/navigation/Navigation.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { Hamburger } from \"./Hamburger\";\n// import { Link, NavLink, useNavigate } from \"react-router-dom\";\n\n// export function Navigation(props) {\n//   const [hamburgerOpen, setHamburgerOpen] = useState(false);\n//   const [navClass, setNavClass] = useState(\"nav\");\n//   const [navClassContainer, setNavClassContainer] = useState(\"menu\");\n//   const [history, setHistory] = useState(\"hidden\");\n//   const [post, setPost] = useState(\"hidden\");\n//   const [book, setBook] = useState(\"hidden\");\n//   const [login, setLogin] = useState(\"show\");\n//   const [logout, setLogout] = useState(\"hidden\");\n//   const navigate = useNavigate();\n\n//   const toggleHamburger = () => {\n//     setHamburgerOpen(!hamburgerOpen);\n//     if (hamburgerOpen) {\n//       setNavClass(\"nav-open\");\n//       setNavClassContainer(\"menu open\");\n//     } else {\n//       setNavClass(\"nav\");\n//       setNavClassContainer(\"menu\");\n//     }\n//   };\n\n//   const handleLogoutChange = () => {\n//     localStorage.removeItem(\"loggedIn\");\n//     localStorage.removeItem(\"username\");\n//     navigate(\"/login\");\n//     window.location.reload();\n//   };\n\n//   useEffect(() => {\n//     let loggedIn = localStorage.getItem(\"loggedIn\");\n//     if (loggedIn === \"user\") {\n//       setHistory(\"show\");\n//       setPost(\"hidden\");\n//       setBook(\"show\");\n//       setLogin(\"hidden\");\n//       setLogout(\"show\");\n//     } else if (loggedIn === \"worker\") {\n//       setHistory(\"hidden\");\n//       setPost(\"show\");\n//       setBook(\"hidden\");\n//       setLogin(\"hidden\");\n//       setLogout(\"show\");\n//     } else {\n//       setHistory(\"hidden\");\n//       setPost(\"hidden\");\n//       setBook(\"hidden\");\n//       setLogin(\"show\");\n//       setLogout(\"hidden\");\n//     }\n//   }, []);\n\n//   return (\n//     <>\n//       <nav>\n//         <h1 className=\"title\">\n//           <Link to=\"/book\">JavaAir</Link>\n//         </h1>\n//         <div className={navClassContainer}>\n//           <div className=\"hamburger\" onClick={toggleHamburger}>\n//             <Hamburger />\n//           </div>\n//           <div className={navClass}>\n//             <ul>\n//               <li>\n//                 <NavLink to=\"/intro\">Home</NavLink>\n//               </li>\n//               <li className={book}>\n//                 <NavLink to=\"/book\">Book</NavLink>\n//               </li>\n//               <li className={history}>\n//                 <NavLink to=\"/history\">History</NavLink>\n//               </li>\n//               <li className={post}>\n//                 <NavLink to=\"/post\">Post</NavLink>\n//               </li>\n//               <li className={login}>\n//                 <NavLink to=\"/login\">Login</NavLink>\n//               </li>\n//               <li className={logout}>\n//                 <button className=\"logout\" onClick={handleLogoutChange}>\n//                   Logout\n//                 </button>\n//               </li>\n//             </ul>\n//           </div>\n//         </div>\n//       </nav>\n//     </>\n//   );\n// }\n\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, NavLink, useNavigate } from \"react-router-dom\";\n\nexport function Navigation() {\n  const [userType, setUserType] = useState(\"\");\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const checkSession = async () => {\n      try {\n        const response = await fetch(\"/api/v3/users/myIdentity\");\n        const data = await response.json();\n        if (data.status === \"loggedin\") {\n          setUserType(data.userInfo.userType);\n        }\n      } catch (err) {\n        console.error(\"Error fetching user session:\", err);\n      }\n    };\n\n    checkSession();\n  }, []);\n\n  const handleLogout = async () => {\n    try {\n      await fetch(\"/api/v3/users/logout\", { method: \"POST\" });\n      setUserType(\"\");\n      navigate(\"/login\");\n    } catch (err) {\n      console.error(\"Error during logout:\", err);\n    }\n  };\n\n  return (\n    <nav>\n      <h1 className=\"title\">\n        <Link to=\"/book\">JavaAir</Link>\n      </h1>\n      <ul>\n        <li>\n          <NavLink to=\"/intro\">Home</NavLink>\n        </li>\n        {userType === \"user\" && (\n          <>\n            <li>\n              <NavLink to=\"/history\">History</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/book\">Book</NavLink>\n            </li>\n          </>\n        )}\n        {userType === \"worker\" && (\n          <li>\n            <NavLink to=\"/post\">Post</NavLink>\n          </li>\n        )}\n        {!userType ? (\n          <li>\n            <NavLink to=\"/login\">Login</NavLink>\n          </li>\n        ) : (\n          <li>\n            <button className=\"logout\" onClick={handleLogout}>\n              Logout\n            </button>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}