{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { getDatabase, ref, get, set as firebaseSet } from \"firebase/database\";\n// import {\n//   getStorage,\n//   ref as storageRef,\n//   uploadBytes,\n//   getDownloadURL,\n// } from \"firebase/storage\";\n// export function PostFlightForm() {\n//   const [flightID, setFlightID] = useState(\"\");\n//   const [from, setFrom] = useState(\"\");\n//   const [to, setTo] = useState(\"\");\n//   const [departureTime, setDepartureTime] = useState(\"\");\n//   const [arrivalTime, setArrivalTime] = useState(\"\");\n//   const [departureDate, setDepartureDate] = useState(\"\");\n//   const [quantity, setQuantity] = useState(-1);\n//   const [images, setImages] = useState([]);\n//   const [flightExist, setFlightExist] = useState(false);\n//   const [isEmpty, setIsEmpty] = useState(false);\n//   const [incompatibleFile, setIncompatibleFile] = useState(false);\n//   const [loading, setLoading] = useState(false);\n//   const [successPost, setSuccessPost] = useState(false);\n//   const allowedFileTypes = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\n//   let imageUrls = [];\n//   const handleflightIDChange = (event) => {\n//     setFlightID(event.target.value);\n//   };\n//   const handleFromChange = (event) => {\n//     setFrom(event.target.value);\n//   };\n//   const handleToChange = (event) => {\n//     setTo(event.target.value);\n//   };\n//   const handleDepartureTimeChange = (event) => {\n//     setDepartureTime(event.target.value);\n//   };\n//   const handleArrivalTimeChange = (event) => {\n//     setArrivalTime(event.target.value);\n//   };\n//   const handleQuantityChange = (event) => {\n//     setQuantity(event.target.value);\n//   };\n//   const handleDepartureDateChange = (event) => {\n//     setDepartureDate(String(event.target.value));\n//   };\n//   const handleImageChange = (event) => {\n//     const selectedFiles = Array.from(event.target.files);\n//     setImages(selectedFiles);\n//   };\n//   const checkEmpty = () =>\n//     flightID === \"\" ||\n//     from === \"\" ||\n//     to === \"\" ||\n//     departureTime === \"\" ||\n//     arrivalTime === \"\" ||\n//     departureDate === \"\" ||\n//     images.length === 0 ||\n//     quantity === -1;\n//   const checkFile = () => {\n//     return images.every((image) => allowedFileTypes.includes(image.type));\n//   };\n//   const checkFlightEntries = () => {\n//     const db = getDatabase();\n//     const flightRef = ref(db, `flight/${flightID}`);\n//     return get(flightRef)\n//       .then((snapshot) => {\n//         if (snapshot.exists()) {\n//           setFlightExist(true);\n//           return true;\n//         } else {\n//           setFlightExist(false);\n//           return false;\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//         return false;\n//       });\n//   };\n//   const inputDBEntries = () => {\n//     const db = getDatabase();\n//     const flightRef = ref(db, `flight/${flightID}`);\n//     firebaseSet(flightRef, {\n//       flightID: flightID,\n//       from: from,\n//       to: to,\n//       departureTime: departureTime,\n//       arrivalTime: arrivalTime,\n//       quantity: quantity,\n//       departureDate: departureDate,\n//       images: imageUrls,\n//     })\n//       .then(() => console.log(\"data saved successfully!\"))\n//       .catch((err) => console.log(err));\n//     setSuccessPost(true);\n//   };\n//   const inputStorageEntries = async () => {\n//     const storage = getStorage();\n//     try {\n//       for (const image of images) {\n//         const fileRef = storageRef(storage, `img/${image.name}`);\n//         await uploadBytes(fileRef, image);\n//         const url = await getDownloadURL(fileRef);\n//         imageUrls.push(url);\n//       }\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   };\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     let empty = checkEmpty();\n//     if (!empty) {\n//       setIsEmpty(false);\n//       let checkImage = checkFile();\n//       if (checkImage) {\n//         setIncompatibleFile(false);\n//         try {\n//           let checkFlightExist = await checkFlightEntries();\n//           if (!checkFlightExist) {\n//             setLoading(true);\n//             await inputStorageEntries();\n//             await inputDBEntries();\n//             setLoading(false);\n//             setTimeout(() => {\n//               window.location.reload();\n//             }, 1800);\n//           } else {\n//             console.log(\"Flight ID already exists!\");\n//           }\n//         } catch (err) {\n//           console.log(err);\n//         }\n//       } else {\n//         setIncompatibleFile(true);\n//         console.log(\"incompatible file\");\n//       }\n//     } else {\n//       setIsEmpty(true);\n//     }\n//   };\n//   return (\n//     <>\n//       <section class=\"post-container\">\n//         <h1>Post Flights</h1>\n//         <form id=\"post-flights-form\">\n//           <label for=\"flight_id\">Flight ID:</label>\n//           <input\n//             type=\"text\"\n//             id=\"flight_id\"\n//             name=\"flight_id\"\n//             onChange={handleflightIDChange}\n//             required\n//           />\n//           <label for=\"from\">From:</label>\n//           <input\n//             type=\"text\"\n//             id=\"from\"\n//             name=\"from\"\n//             onChange={handleFromChange}\n//             required\n//           />\n//           <label for=\"to\">To:</label>\n//           <input\n//             type=\"text\"\n//             id=\"to\"\n//             name=\"to\"\n//             onChange={handleToChange}\n//             required\n//           />\n//           <label for=\"departure_time\">Departure Time:</label>\n//           <input\n//             type=\"text\"\n//             id=\"departure_time\"\n//             name=\"departure_time\"\n//             onChange={handleDepartureTimeChange}\n//             required\n//           />\n//           <label for=\"arrival_time\">Arrival Time:</label>\n//           <input\n//             type=\"text\"\n//             id=\"arrival_time\"\n//             name=\"arrival_time\"\n//             onChange={handleArrivalTimeChange}\n//             required\n//           />\n//           <label for=\"departure_date\">Departure Date:</label>\n//           <input\n//             type=\"date\"\n//             id=\"departure_date\"\n//             name=\"departure_date\"\n//             onChange={handleDepartureDateChange}\n//             required\n//           />\n//           <label for=\"quantity\">Quantity:</label>\n//           <input\n//             type=\"number\"\n//             id=\"quantity\"\n//             name=\"quantity\"\n//             onChange={handleQuantityChange}\n//             required\n//           />\n//           <label for=\"images\">Images:</label>\n//           <div className=\"img-input-container\">\n//             <input\n//               type=\"file\"\n//               id=\"images\"\n//               name=\"images\"\n//               multiple\n//               onChange={handleImageChange}\n//               required\n//             />\n//           </div>\n//           <button type=\"submit\" onClick={handleSubmit}>\n//             Post Flights\n//           </button>\n//         </form>\n//         {isEmpty && <div className=\"error-msg\">Form is incomplete</div>}\n//         {flightExist && (\n//           <div className=\"error-msg\">Flight ID already exists</div>\n//         )}\n//         {incompatibleFile && (\n//           <div className=\"error-msg\">Incompatible file. Input an image</div>\n//         )}\n//         {loading && (\n//           <div>Loading...</div>\n//         )}\n//         {successPost && (\n//           <div className=\"success-msg\">Successfully posted!!!</div>\n//         )}\n//       </section>\n//     </>\n//   );\n// }\nimport React,{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function PostFlightForm(){const[flightID,setFlightID]=useState(\"\");const[from,setFrom]=useState(\"\");const[to,setTo]=useState(\"\");const[departureTime,setDepartureTime]=useState(\"\");const[arrivalTime,setArrivalTime]=useState(\"\");const[departureDate,setDepartureDate]=useState(\"\");const[quantity,setQuantity]=useState(-1);const[images,setImages]=useState([]);const[flightExist,setFlightExist]=useState(false);const[isEmpty,setIsEmpty]=useState(false);const[incompatibleFile,setIncompatibleFile]=useState(false);const[loading,setLoading]=useState(false);const[successPost,setSuccessPost]=useState(false);const allowedFileTypes=[\"image/png\",\"image/jpeg\",\"image/jpg\"];const handleInputChange=setter=>event=>{setter(event.target.value);};const handleImageChange=event=>{const selectedFiles=Array.from(event.target.files);setImages(selectedFiles);};const checkEmpty=()=>flightID===\"\"||from===\"\"||to===\"\"||departureTime===\"\"||arrivalTime===\"\"||departureDate===\"\"||images.length===0||quantity===-1;const checkFile=()=>{return images.every(image=>allowedFileTypes.includes(image.type));};const uploadImages=async()=>{const formData=new FormData();images.forEach(image=>formData.append(\"images\",image));try{const response=await fetch(\"/api/v3/flights/upload\",{method:\"POST\",body:formData});if(!response.ok){throw new Error(\"Image upload failed\");}const{imageUrls}=await response.json();return imageUrls;}catch(err){console.error(err);throw err;}};const submitFlightDetails=async imageUrls=>{const flightData={flightID,from,to,departureTime,arrivalTime,departureDate,quantity,images:imageUrls};try{const response=await fetch(\"/api/v3/flights/addFlight\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(flightData)});if(!response.ok){if(response.status===409){setFlightExist(true);}else{throw new Error(\"Failed to save flight details\");}}else{setSuccessPost(true);}}catch(err){console.error(err);}};const handleSubmit=async event=>{event.preventDefault();if(checkEmpty()){setIsEmpty(true);return;}setIsEmpty(false);if(!checkFile()){setIncompatibleFile(true);return;}setIncompatibleFile(false);try{setLoading(true);const imageUrls=await uploadImages();await submitFlightDetails(imageUrls);setLoading(false);setTimeout(()=>{window.location.reload();},1800);}catch(err){setLoading(false);console.error(\"Error submitting flight details:\",err);}};return/*#__PURE__*/_jsxs(\"section\",{className:\"post-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Post Flights\"}),/*#__PURE__*/_jsxs(\"form\",{id:\"post-flights-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"flight_id\",children:\"Flight ID:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"flight_id\",name:\"flight_id\",onChange:handleInputChange(setFlightID),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"from\",children:\"From:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"from\",name:\"from\",onChange:handleInputChange(setFrom),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"to\",children:\"To:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"to\",name:\"to\",onChange:handleInputChange(setTo),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"departure_time\",children:\"Departure Time:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"departure_time\",name:\"departure_time\",onChange:handleInputChange(setDepartureTime),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"arrival_time\",children:\"Arrival Time:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"arrival_time\",name:\"arrival_time\",onChange:handleInputChange(setArrivalTime),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"departure_date\",children:\"Departure Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"departure_date\",name:\"departure_date\",onChange:handleInputChange(setDepartureDate),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"quantity\",children:\"Quantity:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"quantity\",name:\"quantity\",onChange:handleInputChange(setQuantity),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"images\",children:\"Images:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"img-input-container\",children:/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"images\",name:\"images\",multiple:true,onChange:handleImageChange,required:true})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Post Flights\"})]}),isEmpty&&/*#__PURE__*/_jsx(\"div\",{className:\"error-msg\",children:\"Form is incomplete\"}),flightExist&&/*#__PURE__*/_jsx(\"div\",{className:\"error-msg\",children:\"Flight ID already exists\"}),incompatibleFile&&/*#__PURE__*/_jsx(\"div\",{className:\"error-msg\",children:\"Incompatible file. Input an image\"}),loading&&/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}),successPost&&/*#__PURE__*/_jsx(\"div\",{className:\"success-msg\",children:\"Successfully posted!!!\"})]});}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","PostFlightForm","flightID","setFlightID","from","setFrom","to","setTo","departureTime","setDepartureTime","arrivalTime","setArrivalTime","departureDate","setDepartureDate","quantity","setQuantity","images","setImages","flightExist","setFlightExist","isEmpty","setIsEmpty","incompatibleFile","setIncompatibleFile","loading","setLoading","successPost","setSuccessPost","allowedFileTypes","handleInputChange","setter","event","target","value","handleImageChange","selectedFiles","Array","files","checkEmpty","length","checkFile","every","image","includes","type","uploadImages","formData","FormData","forEach","append","response","fetch","method","body","ok","Error","imageUrls","json","err","console","error","submitFlightDetails","flightData","headers","JSON","stringify","status","handleSubmit","preventDefault","setTimeout","window","location","reload","className","children","id","onSubmit","htmlFor","name","onChange","required","multiple"],"sources":["/Users/muhammadputra/Desktop/JavaAir/frontend/src/components/form/PostFlightForm.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { getDatabase, ref, get, set as firebaseSet } from \"firebase/database\";\n// import {\n//   getStorage,\n//   ref as storageRef,\n//   uploadBytes,\n//   getDownloadURL,\n// } from \"firebase/storage\";\n\n// export function PostFlightForm() {\n//   const [flightID, setFlightID] = useState(\"\");\n//   const [from, setFrom] = useState(\"\");\n//   const [to, setTo] = useState(\"\");\n//   const [departureTime, setDepartureTime] = useState(\"\");\n//   const [arrivalTime, setArrivalTime] = useState(\"\");\n//   const [departureDate, setDepartureDate] = useState(\"\");\n//   const [quantity, setQuantity] = useState(-1);\n//   const [images, setImages] = useState([]);\n//   const [flightExist, setFlightExist] = useState(false);\n//   const [isEmpty, setIsEmpty] = useState(false);\n//   const [incompatibleFile, setIncompatibleFile] = useState(false);\n//   const [loading, setLoading] = useState(false);\n//   const [successPost, setSuccessPost] = useState(false);\n//   const allowedFileTypes = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\n//   let imageUrls = [];\n\n//   const handleflightIDChange = (event) => {\n//     setFlightID(event.target.value);\n//   };\n\n//   const handleFromChange = (event) => {\n//     setFrom(event.target.value);\n//   };\n\n//   const handleToChange = (event) => {\n//     setTo(event.target.value);\n//   };\n\n//   const handleDepartureTimeChange = (event) => {\n//     setDepartureTime(event.target.value);\n//   };\n\n//   const handleArrivalTimeChange = (event) => {\n//     setArrivalTime(event.target.value);\n//   };\n\n//   const handleQuantityChange = (event) => {\n//     setQuantity(event.target.value);\n//   };\n\n//   const handleDepartureDateChange = (event) => {\n//     setDepartureDate(String(event.target.value));\n//   };\n\n//   const handleImageChange = (event) => {\n//     const selectedFiles = Array.from(event.target.files);\n//     setImages(selectedFiles);\n//   };\n\n//   const checkEmpty = () =>\n//     flightID === \"\" ||\n//     from === \"\" ||\n//     to === \"\" ||\n//     departureTime === \"\" ||\n//     arrivalTime === \"\" ||\n//     departureDate === \"\" ||\n//     images.length === 0 ||\n//     quantity === -1;\n\n//   const checkFile = () => {\n//     return images.every((image) => allowedFileTypes.includes(image.type));\n//   };\n\n//   const checkFlightEntries = () => {\n//     const db = getDatabase();\n//     const flightRef = ref(db, `flight/${flightID}`);\n\n//     return get(flightRef)\n//       .then((snapshot) => {\n//         if (snapshot.exists()) {\n//           setFlightExist(true);\n//           return true;\n//         } else {\n//           setFlightExist(false);\n//           return false;\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//         return false;\n//       });\n//   };\n\n//   const inputDBEntries = () => {\n//     const db = getDatabase();\n//     const flightRef = ref(db, `flight/${flightID}`);\n//     firebaseSet(flightRef, {\n//       flightID: flightID,\n//       from: from,\n//       to: to,\n//       departureTime: departureTime,\n//       arrivalTime: arrivalTime,\n//       quantity: quantity,\n//       departureDate: departureDate,\n//       images: imageUrls,\n//     })\n//       .then(() => console.log(\"data saved successfully!\"))\n//       .catch((err) => console.log(err));\n//     setSuccessPost(true);\n//   };\n\n//   const inputStorageEntries = async () => {\n//     const storage = getStorage();\n\n//     try {\n//       for (const image of images) {\n//         const fileRef = storageRef(storage, `img/${image.name}`);\n//         await uploadBytes(fileRef, image);\n//         const url = await getDownloadURL(fileRef);\n//         imageUrls.push(url);\n//       }\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     let empty = checkEmpty();\n//     if (!empty) {\n//       setIsEmpty(false);\n//       let checkImage = checkFile();\n//       if (checkImage) {\n//         setIncompatibleFile(false);\n//         try {\n//           let checkFlightExist = await checkFlightEntries();\n//           if (!checkFlightExist) {\n//             setLoading(true);\n//             await inputStorageEntries();\n//             await inputDBEntries();\n//             setLoading(false);\n//             setTimeout(() => {\n//               window.location.reload();\n//             }, 1800);\n//           } else {\n//             console.log(\"Flight ID already exists!\");\n//           }\n//         } catch (err) {\n//           console.log(err);\n//         }\n//       } else {\n//         setIncompatibleFile(true);\n//         console.log(\"incompatible file\");\n//       }\n//     } else {\n//       setIsEmpty(true);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <section class=\"post-container\">\n//         <h1>Post Flights</h1>\n//         <form id=\"post-flights-form\">\n//           <label for=\"flight_id\">Flight ID:</label>\n//           <input\n//             type=\"text\"\n//             id=\"flight_id\"\n//             name=\"flight_id\"\n//             onChange={handleflightIDChange}\n//             required\n//           />\n//           <label for=\"from\">From:</label>\n//           <input\n//             type=\"text\"\n//             id=\"from\"\n//             name=\"from\"\n//             onChange={handleFromChange}\n//             required\n//           />\n//           <label for=\"to\">To:</label>\n//           <input\n//             type=\"text\"\n//             id=\"to\"\n//             name=\"to\"\n//             onChange={handleToChange}\n//             required\n//           />\n//           <label for=\"departure_time\">Departure Time:</label>\n//           <input\n//             type=\"text\"\n//             id=\"departure_time\"\n//             name=\"departure_time\"\n//             onChange={handleDepartureTimeChange}\n//             required\n//           />\n//           <label for=\"arrival_time\">Arrival Time:</label>\n//           <input\n//             type=\"text\"\n//             id=\"arrival_time\"\n//             name=\"arrival_time\"\n//             onChange={handleArrivalTimeChange}\n//             required\n//           />\n//           <label for=\"departure_date\">Departure Date:</label>\n//           <input\n//             type=\"date\"\n//             id=\"departure_date\"\n//             name=\"departure_date\"\n//             onChange={handleDepartureDateChange}\n//             required\n//           />\n//           <label for=\"quantity\">Quantity:</label>\n//           <input\n//             type=\"number\"\n//             id=\"quantity\"\n//             name=\"quantity\"\n//             onChange={handleQuantityChange}\n//             required\n//           />\n//           <label for=\"images\">Images:</label>\n//           <div className=\"img-input-container\">\n//             <input\n//               type=\"file\"\n//               id=\"images\"\n//               name=\"images\"\n//               multiple\n//               onChange={handleImageChange}\n//               required\n//             />\n//           </div>\n//           <button type=\"submit\" onClick={handleSubmit}>\n//             Post Flights\n//           </button>\n//         </form>\n//         {isEmpty && <div className=\"error-msg\">Form is incomplete</div>}\n//         {flightExist && (\n//           <div className=\"error-msg\">Flight ID already exists</div>\n//         )}\n//         {incompatibleFile && (\n//           <div className=\"error-msg\">Incompatible file. Input an image</div>\n//         )}\n//         {loading && (\n//           <div>Loading...</div>\n//         )}\n//         {successPost && (\n//           <div className=\"success-msg\">Successfully posted!!!</div>\n//         )}\n//       </section>\n//     </>\n//   );\n// }\n\n\nimport React, { useState } from \"react\";\n\nexport function PostFlightForm() {\n  const [flightID, setFlightID] = useState(\"\");\n  const [from, setFrom] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n  const [departureTime, setDepartureTime] = useState(\"\");\n  const [arrivalTime, setArrivalTime] = useState(\"\");\n  const [departureDate, setDepartureDate] = useState(\"\");\n  const [quantity, setQuantity] = useState(-1);\n  const [images, setImages] = useState([]);\n  const [flightExist, setFlightExist] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [incompatibleFile, setIncompatibleFile] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [successPost, setSuccessPost] = useState(false);\n  const allowedFileTypes = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\n\n  const handleInputChange = (setter) => (event) => {\n    setter(event.target.value);\n  };\n\n  const handleImageChange = (event) => {\n    const selectedFiles = Array.from(event.target.files);\n    setImages(selectedFiles);\n  };\n\n  const checkEmpty = () =>\n    flightID === \"\" ||\n    from === \"\" ||\n    to === \"\" ||\n    departureTime === \"\" ||\n    arrivalTime === \"\" ||\n    departureDate === \"\" ||\n    images.length === 0 ||\n    quantity === -1;\n\n  const checkFile = () => {\n    return images.every((image) => allowedFileTypes.includes(image.type));\n  };\n\n  const uploadImages = async () => {\n    const formData = new FormData();\n    images.forEach((image) => formData.append(\"images\", image));\n\n    try {\n      const response = await fetch(\"/api/v3/flights/upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Image upload failed\");\n      }\n\n      const { imageUrls } = await response.json();\n      return imageUrls;\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  };\n\n  const submitFlightDetails = async (imageUrls) => {\n    const flightData = {\n      flightID,\n      from,\n      to,\n      departureTime,\n      arrivalTime,\n      departureDate,\n      quantity,\n      images: imageUrls,\n    };\n\n    try {\n      const response = await fetch(\"/api/v3/flights/addFlight\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(flightData),\n      });\n\n      if (!response.ok) {\n        if (response.status === 409) {\n          setFlightExist(true);\n        } else {\n          throw new Error(\"Failed to save flight details\");\n        }\n      } else {\n        setSuccessPost(true);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (checkEmpty()) {\n      setIsEmpty(true);\n      return;\n    }\n    setIsEmpty(false);\n\n    if (!checkFile()) {\n      setIncompatibleFile(true);\n      return;\n    }\n    setIncompatibleFile(false);\n\n    try {\n      setLoading(true);\n\n      const imageUrls = await uploadImages();\n      await submitFlightDetails(imageUrls);\n\n      setLoading(false);\n      setTimeout(() => {\n        window.location.reload();\n      }, 1800);\n    } catch (err) {\n      setLoading(false);\n      console.error(\"Error submitting flight details:\", err);\n    }\n  };\n\n  return (\n    <section className=\"post-container\">\n      <h1>Post Flights</h1>\n      <form id=\"post-flights-form\" onSubmit={handleSubmit}>\n        <label htmlFor=\"flight_id\">Flight ID:</label>\n        <input\n          type=\"text\"\n          id=\"flight_id\"\n          name=\"flight_id\"\n          onChange={handleInputChange(setFlightID)}\n          required\n        />\n        <label htmlFor=\"from\">From:</label>\n        <input\n          type=\"text\"\n          id=\"from\"\n          name=\"from\"\n          onChange={handleInputChange(setFrom)}\n          required\n        />\n        <label htmlFor=\"to\">To:</label>\n        <input\n          type=\"text\"\n          id=\"to\"\n          name=\"to\"\n          onChange={handleInputChange(setTo)}\n          required\n        />\n        <label htmlFor=\"departure_time\">Departure Time:</label>\n        <input\n          type=\"text\"\n          id=\"departure_time\"\n          name=\"departure_time\"\n          onChange={handleInputChange(setDepartureTime)}\n          required\n        />\n        <label htmlFor=\"arrival_time\">Arrival Time:</label>\n        <input\n          type=\"text\"\n          id=\"arrival_time\"\n          name=\"arrival_time\"\n          onChange={handleInputChange(setArrivalTime)}\n          required\n        />\n        <label htmlFor=\"departure_date\">Departure Date:</label>\n        <input\n          type=\"date\"\n          id=\"departure_date\"\n          name=\"departure_date\"\n          onChange={handleInputChange(setDepartureDate)}\n          required\n        />\n        <label htmlFor=\"quantity\">Quantity:</label>\n        <input\n          type=\"number\"\n          id=\"quantity\"\n          name=\"quantity\"\n          onChange={handleInputChange(setQuantity)}\n          required\n        />\n        <label htmlFor=\"images\">Images:</label>\n        <div className=\"img-input-container\">\n          <input\n            type=\"file\"\n            id=\"images\"\n            name=\"images\"\n            multiple\n            onChange={handleImageChange}\n            required\n          />\n        </div>\n        <button type=\"submit\">Post Flights</button>\n      </form>\n      {isEmpty && <div className=\"error-msg\">Form is incomplete</div>}\n      {flightExist && <div className=\"error-msg\">Flight ID already exists</div>}\n      {incompatibleFile && (\n        <div className=\"error-msg\">Incompatible file. Input an image</div>\n      )}\n      {loading && <div>Loading...</div>}\n      {successPost && <div className=\"success-msg\">Successfully posted!!!</div>}\n    </section>\n  );\n}"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}